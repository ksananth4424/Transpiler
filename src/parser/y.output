State 71 conflicts: 1 shift/reduce


Grammar

    0 $accept: start_rule $end

    1 start_rule: set_up_section program_body

    2 program_body: statement_list
    3             | ε

    4 set_up_section: ε
    5               | set_up_section function_declaration
    6               | set_up_section set_statement

    7 $@1: ε

    8 function_declaration: $@1 FUNC IDENTIFIER '(' parameter_list ';' declaration_specifier ')' compound_statement

    9 parameter_list: parameter
   10               | parameter_list ',' parameter

   11 parameter: declaration_specifier IDENTIFIER

   12 set_statement: SET INT SMALL ';'
   13              | SET INT BIG ';'
   14              | SET FLOAT SMALL ';'
   15              | SET FLOAT BIG ';'

   16 primary_expression: '(' expression ')'
   17                   | CONSTANT

   18 function_call: IDENTIFIER '(' ')'
   19              | IDENTIFIER '(' argument_expression_list ')'

   20 argument_expression_list: expression
   21                         | argument_expression_list ',' expression

   22 map_array: '[' expression ']'
   23          | map_array '[' expression ']'

   24 lhs_expression: IDENTIFIER
   25               | IDENTIFIER map_array

   26 postfix_expression: lhs_expression
   27                   | function_call map_array
   28                   | function_call
   29                   | primary_expression

   30 unary_expression: NOT unary_expression
   31                 | '~' unary_expression
   32                 | '-' unary_expression
   33                 | '+' unary_expression
   34                 | SIZE '[' postfix_expression ']'
   35                 | postfix_expression

   36 multiplicative_expression: unary_expression
   37                          | multiplicative_expression '*' unary_expression
   38                          | multiplicative_expression '/' unary_expression
   39                          | multiplicative_expression '%' unary_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression '-' multiplicative_expression
   42                    | additive_expression '+' multiplicative_expression

   43 relational_expression: additive_expression
   44                      | relational_expression '<' additive_expression
   45                      | relational_expression '>' additive_expression
   46                      | relational_expression LE_OP additive_expression
   47                      | relational_expression GE_OP additive_expression

   48 equality_expression: relational_expression
   49                    | equality_expression EQ_OP relational_expression
   50                    | equality_expression NE_OP relational_expression

   51 and_expression: equality_expression
   52               | and_expression '&' equality_expression

   53 exclusive_or_expression: and_expression
   54                        | exclusive_or_expression '^' and_expression

   55 inclusive_or_expression: exclusive_or_expression
   56                        | inclusive_or_expression '|' exclusive_or_expression

   57 logical_and_expression: inclusive_or_expression
   58                       | logical_and_expression AND inclusive_or_expression

   59 logical_or_expression: logical_and_expression
   60                      | logical_or_expression OR logical_and_expression

   61 expression: logical_or_expression

   62 assignment_statement: expression
   63                     | lhs_expression '=' expression

   64 declaration_statement: declaration_specifier init_declarator_list ';'

   65 declaration_specifier: type_specifier
   66                      | '[' declaration_specifier ']'
   67                      | '{' declaration_specifier ':' declaration_specifier '}'

   68 init_declarator_list: init_declarator
   69                     | init_declarator_list ',' init_declarator

   70 init_declarator: declarator
   71                | declarator '=' initializer

   72 type_specifier: INT
   73               | FLOAT
   74               | INT CONST
   75               | FLOAT CONST

   76 declarator: IDENTIFIER

   77 initializer: assignment_statement

   78 push_pop_statement: IDENTIFIER BACKWARD_ACCESS '[' expression ']'
   79                   | IDENTIFIER map_array BACKWARD_ACCESS '[' expression ']'
   80                   | '[' expression ']' FORWARD_ACCESS IDENTIFIER
   81                   | '[' expression ']' FORWARD_ACCESS IDENTIFIER map_array
   82                   | IDENTIFIER FORWARD_ACCESS '[' expression ']'
   83                   | IDENTIFIER map_array FORWARD_ACCESS '[' expression ']'
   84                   | '[' lhs_expression ']' BACKWARD_ACCESS IDENTIFIER
   85                   | '[' lhs_expression ']' BACKWARD_ACCESS IDENTIFIER map_array
   86                   | IDENTIFIER FORWARD_ACCESS '[' ']'
   87                   | IDENTIFIER map_array FORWARD_ACCESS '[' ']'
   88                   | '[' ']' BACKWARD_ACCESS IDENTIFIER
   89                   | '[' ']' BACKWARD_ACCESS IDENTIFIER map_array

   90 compound_statement: '<' '>'
   91                   | '<' statement_list '>'

   92 expression_statement: ';'
   93                     | expression ';'

   94 $@2: ε

   95 loop_statement: $@2 iteration_statement

   96 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement
   97                    | LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement
   98                    | LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement
   99                    | LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement
  100                    | LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement
  101                    | LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

  102 return_statement: RETURN VOID
  103                 | RETURN expression

  104 print_statement: PRINT '(' expression ')'

  105 chaining_if_else: expression '?' statement_list
  106                 | expression '?' statement_list ELSE ':' statement_list
  107                 | expression '?' statement_list chaining_if_else

  108 if_else_statement: '<' chaining_if_else '>'

  109 statement: assignment_statement ';'
  110          | compound_statement
  111          | loop_statement
  112          | return_statement ';'
  113          | print_statement ';'
  114          | push_pop_statement ';'
  115          | if_else_statement
  116          | declaration_statement

  117 statement_list: statement
  118               | statement_list statement


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 39
    '&' (38) 52
    '(' (40) 8 16 18 19 96 97 98 99 100 101 104
    ')' (41) 8 16 18 19 96 97 98 99 100 101 104
    '*' (42) 37
    '+' (43) 33 42
    ',' (44) 10 21 69
    '-' (45) 32 41
    '/' (47) 38
    ':' (58) 67 96 97 98 99 100 101 106
    ';' (59) 8 12 13 14 15 64 92 93 96 97 100 101 109 112 113 114
    '<' (60) 44 90 91 108
    '=' (61) 63 71
    '>' (62) 45 90 91 108
    '?' (63) 105 106 107
    '[' (91) 22 23 34 66 78 79 80 81 82 83 84 85 86 87 88 89
    ']' (93) 22 23 34 66 78 79 80 81 82 83 84 85 86 87 88 89
    '^' (94) 54
    '{' (123) 67
    '|' (124) 56
    '}' (125) 67
    '~' (126) 31
    error (256)
    IDENTIFIER (258) 8 11 18 19 24 25 76 78 79 80 81 82 83 84 85 86 87 88 89
    CONSTANT (259) 17
    OR (260) 60
    AND (261) 58
    NOT (262) 30
    LE_OP (263) 46
    GE_OP (264) 47
    NE_OP (265) 50
    EQ_OP (266) 49
    FORWARD_ACCESS (267) 80 81 82 83 86 87
    BACKWARD_ACCESS (268) 78 79 84 85 88 89
    INT (269) 12 13 72 74
    FLOAT (270) 14 15 73 75
    BIG (271) 13 15
    SMALL (272) 12 14
    CONST (273) 74 75
    VOID (274) 102
    SET (275) 12 13 14 15
    ELSE (276) 106
    SIZE (277) 34
    LOOP (278) 96 97 98 99 100 101
    FINALLY (279) 97 99 101
    RETURN (280) 102 103
    FUNC (281) 8
    PRINT (282) 104


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    start_rule (51)
        on left: 1
        on right: 0
    program_body (52)
        on left: 2 3
        on right: 1
    set_up_section (53)
        on left: 4 5 6
        on right: 1 5 6
    function_declaration (54)
        on left: 8
        on right: 5
    $@1 (55)
        on left: 7
        on right: 8
    parameter_list (56)
        on left: 9 10
        on right: 8 10
    parameter (57)
        on left: 11
        on right: 9 10
    set_statement (58)
        on left: 12 13 14 15
        on right: 6
    primary_expression (59)
        on left: 16 17
        on right: 29
    function_call (60)
        on left: 18 19
        on right: 27 28
    argument_expression_list (61)
        on left: 20 21
        on right: 19 21
    map_array (62)
        on left: 22 23
        on right: 23 25 27 79 81 83 85 87 89
    lhs_expression (63)
        on left: 24 25
        on right: 26 63 84 85
    postfix_expression (64)
        on left: 26 27 28 29
        on right: 34 35
    unary_expression (65)
        on left: 30 31 32 33 34 35
        on right: 30 31 32 33 36 37 38 39
    multiplicative_expression (66)
        on left: 36 37 38 39
        on right: 37 38 39 40 41 42
    additive_expression (67)
        on left: 40 41 42
        on right: 41 42 43 44 45 46 47
    relational_expression (68)
        on left: 43 44 45 46 47
        on right: 44 45 46 47 48 49 50
    equality_expression (69)
        on left: 48 49 50
        on right: 49 50 51 52
    and_expression (70)
        on left: 51 52
        on right: 52 53 54
    exclusive_or_expression (71)
        on left: 53 54
        on right: 54 55 56
    inclusive_or_expression (72)
        on left: 55 56
        on right: 56 57 58
    logical_and_expression (73)
        on left: 57 58
        on right: 58 59 60
    logical_or_expression (74)
        on left: 59 60
        on right: 60 61
    expression (75)
        on left: 61
        on right: 16 20 21 22 23 62 63 78 79 80 81 82 83 93 103 104 105 106 107
    assignment_statement (76)
        on left: 62 63
        on right: 77 96 97 98 99 100 101 109
    declaration_statement (77)
        on left: 64
        on right: 98 99 116
    declaration_specifier (78)
        on left: 65 66 67
        on right: 8 11 64 66 67
    init_declarator_list (79)
        on left: 68 69
        on right: 64 69
    init_declarator (80)
        on left: 70 71
        on right: 68 69
    type_specifier (81)
        on left: 72 73 74 75
        on right: 65
    declarator (82)
        on left: 76
        on right: 70 71
    initializer (83)
        on left: 77
        on right: 71
    push_pop_statement (84)
        on left: 78 79 80 81 82 83 84 85 86 87 88 89
        on right: 114
    compound_statement (85)
        on left: 90 91
        on right: 8 96 97 98 99 100 101 110
    expression_statement (86)
        on left: 92 93
        on right: 96 97 98 99 100 101
    loop_statement (87)
        on left: 95
        on right: 111
    $@2 (88)
        on left: 94
        on right: 95
    iteration_statement (89)
        on left: 96 97 98 99 100 101
        on right: 95
    return_statement (90)
        on left: 102 103
        on right: 112
    print_statement (91)
        on left: 104
        on right: 113
    chaining_if_else (92)
        on left: 105 106 107
        on right: 107 108
    if_else_statement (93)
        on left: 108
        on right: 115
    statement (94)
        on left: 109 110 111 112 113 114 115 116
        on right: 97 99 101 117 118
    statement_list (95)
        on left: 117 118
        on right: 2 91 105 106 107 118


State 0

    0 $accept: • start_rule $end

    $default  reduce using rule 4 (set_up_section)

    start_rule      go to state 1
    set_up_section  go to state 2


State 1

    0 $accept: start_rule • $end

    $end  shift, and go to state 3


State 2

    1 start_rule: set_up_section • program_body
    5 set_up_section: set_up_section • function_declaration
    6               | set_up_section • set_statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SET         shift, and go to state 9
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    LOOP      reduce using rule 94 ($@2)
    FUNC      reduce using rule 7 ($@1)
    $default  reduce using rule 3 (program_body)

    program_body               go to state 20
    function_declaration       go to state 21
    $@1                        go to state 22
    set_statement              go to state 23
    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 50
    statement_list             go to state 51


State 3

    0 $accept: start_rule $end •

    $default  accept


State 4

   18 function_call: IDENTIFIER • '(' ')'
   19              | IDENTIFIER • '(' argument_expression_list ')'
   24 lhs_expression: IDENTIFIER •
   25               | IDENTIFIER • map_array
   78 push_pop_statement: IDENTIFIER • BACKWARD_ACCESS '[' expression ']'
   79                   | IDENTIFIER • map_array BACKWARD_ACCESS '[' expression ']'
   82                   | IDENTIFIER • FORWARD_ACCESS '[' expression ']'
   83                   | IDENTIFIER • map_array FORWARD_ACCESS '[' expression ']'
   86                   | IDENTIFIER • FORWARD_ACCESS '[' ']'
   87                   | IDENTIFIER • map_array FORWARD_ACCESS '[' ']'

    FORWARD_ACCESS   shift, and go to state 52
    BACKWARD_ACCESS  shift, and go to state 53
    '('              shift, and go to state 54
    '['              shift, and go to state 55

    $default  reduce using rule 24 (lhs_expression)

    map_array  go to state 56


State 5

   17 primary_expression: CONSTANT •

    $default  reduce using rule 17 (primary_expression)


State 6

   30 unary_expression: NOT • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 59


State 7

   72 type_specifier: INT •
   74               | INT • CONST

    CONST  shift, and go to state 60

    $default  reduce using rule 72 (type_specifier)


State 8

   73 type_specifier: FLOAT •
   75               | FLOAT • CONST

    CONST  shift, and go to state 61

    $default  reduce using rule 73 (type_specifier)


State 9

   12 set_statement: SET • INT SMALL ';'
   13              | SET • INT BIG ';'
   14              | SET • FLOAT SMALL ';'
   15              | SET • FLOAT BIG ';'

    INT    shift, and go to state 62
    FLOAT  shift, and go to state 63


State 10

   34 unary_expression: SIZE • '[' postfix_expression ']'

    '['  shift, and go to state 64


State 11

  102 return_statement: RETURN • VOID
  103                 | RETURN • expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    VOID        shift, and go to state 65
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 66


State 12

  104 print_statement: PRINT • '(' expression ')'

    '('  shift, and go to state 67


State 13

   16 primary_expression: '(' • expression ')'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 68


State 14

   66 declaration_specifier: '[' • declaration_specifier ']'
   80 push_pop_statement: '[' • expression ']' FORWARD_ACCESS IDENTIFIER
   81                   | '[' • expression ']' FORWARD_ACCESS IDENTIFIER map_array
   84                   | '[' • lhs_expression ']' BACKWARD_ACCESS IDENTIFIER
   85                   | '[' • lhs_expression ']' BACKWARD_ACCESS IDENTIFIER map_array
   88                   | '[' • ']' BACKWARD_ACCESS IDENTIFIER
   89                   | '[' • ']' BACKWARD_ACCESS IDENTIFIER map_array

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '['         shift, and go to state 69
    ']'         shift, and go to state 70
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '{'         shift, and go to state 19

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 71
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 72
    declaration_specifier      go to state 73
    type_specifier             go to state 42


State 15

   31 unary_expression: '~' • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 74


State 16

   32 unary_expression: '-' • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 75


State 17

   33 unary_expression: '+' • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 76


State 18

   90 compound_statement: '<' • '>'
   91                   | '<' • statement_list '>'
  108 if_else_statement: '<' • chaining_if_else '>'

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '>'         shift, and go to state 77
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 78
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    chaining_if_else           go to state 79
    if_else_statement          go to state 49
    statement                  go to state 50
    statement_list             go to state 80


State 19

   67 declaration_specifier: '{' • declaration_specifier ':' declaration_specifier '}'

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    '['    shift, and go to state 69
    '{'    shift, and go to state 19

    declaration_specifier  go to state 81
    type_specifier         go to state 42


State 20

    1 start_rule: set_up_section program_body •

    $default  reduce using rule 1 (start_rule)


State 21

    5 set_up_section: set_up_section function_declaration •

    $default  reduce using rule 5 (set_up_section)


State 22

    8 function_declaration: $@1 • FUNC IDENTIFIER '(' parameter_list ';' declaration_specifier ')' compound_statement

    FUNC  shift, and go to state 82


State 23

    6 set_up_section: set_up_section set_statement •

    $default  reduce using rule 6 (set_up_section)


State 24

   29 postfix_expression: primary_expression •

    $default  reduce using rule 29 (postfix_expression)


State 25

   27 postfix_expression: function_call • map_array
   28                   | function_call •

    '['  shift, and go to state 55

    $default  reduce using rule 28 (postfix_expression)

    map_array  go to state 83


State 26

   26 postfix_expression: lhs_expression •
   63 assignment_statement: lhs_expression • '=' expression

    '='  shift, and go to state 84

    $default  reduce using rule 26 (postfix_expression)


State 27

   35 unary_expression: postfix_expression •

    $default  reduce using rule 35 (unary_expression)


State 28

   36 multiplicative_expression: unary_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 29

   37 multiplicative_expression: multiplicative_expression • '*' unary_expression
   38                          | multiplicative_expression • '/' unary_expression
   39                          | multiplicative_expression • '%' unary_expression
   40 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 40 (additive_expression)


State 30

   41 additive_expression: additive_expression • '-' multiplicative_expression
   42                    | additive_expression • '+' multiplicative_expression
   43 relational_expression: additive_expression •

    '-'  shift, and go to state 88
    '+'  shift, and go to state 89

    $default  reduce using rule 43 (relational_expression)


State 31

   44 relational_expression: relational_expression • '<' additive_expression
   45                      | relational_expression • '>' additive_expression
   46                      | relational_expression • LE_OP additive_expression
   47                      | relational_expression • GE_OP additive_expression
   48 equality_expression: relational_expression •

    LE_OP  shift, and go to state 90
    GE_OP  shift, and go to state 91
    '<'    shift, and go to state 92
    '>'    shift, and go to state 93

    $default  reduce using rule 48 (equality_expression)


State 32

   49 equality_expression: equality_expression • EQ_OP relational_expression
   50                    | equality_expression • NE_OP relational_expression
   51 and_expression: equality_expression •

    NE_OP  shift, and go to state 94
    EQ_OP  shift, and go to state 95

    $default  reduce using rule 51 (and_expression)


State 33

   52 and_expression: and_expression • '&' equality_expression
   53 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 96

    $default  reduce using rule 53 (exclusive_or_expression)


State 34

   54 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   55 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 97

    $default  reduce using rule 55 (inclusive_or_expression)


State 35

   56 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   57 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 98

    $default  reduce using rule 57 (logical_and_expression)


State 36

   58 logical_and_expression: logical_and_expression • AND inclusive_or_expression
   59 logical_or_expression: logical_and_expression •

    AND  shift, and go to state 99

    $default  reduce using rule 59 (logical_or_expression)


State 37

   60 logical_or_expression: logical_or_expression • OR logical_and_expression
   61 expression: logical_or_expression •

    OR  shift, and go to state 100

    $default  reduce using rule 61 (expression)


State 38

   62 assignment_statement: expression •

    $default  reduce using rule 62 (assignment_statement)


State 39

  109 statement: assignment_statement • ';'

    ';'  shift, and go to state 101


State 40

  116 statement: declaration_statement •

    $default  reduce using rule 116 (statement)


State 41

   64 declaration_statement: declaration_specifier • init_declarator_list ';'

    IDENTIFIER  shift, and go to state 102

    init_declarator_list  go to state 103
    init_declarator       go to state 104
    declarator            go to state 105


State 42

   65 declaration_specifier: type_specifier •

    $default  reduce using rule 65 (declaration_specifier)


State 43

  114 statement: push_pop_statement • ';'

    ';'  shift, and go to state 106


State 44

  110 statement: compound_statement •

    $default  reduce using rule 110 (statement)


State 45

  111 statement: loop_statement •

    $default  reduce using rule 111 (statement)


State 46

   95 loop_statement: $@2 • iteration_statement

    LOOP  shift, and go to state 107

    iteration_statement  go to state 108


State 47

  112 statement: return_statement • ';'

    ';'  shift, and go to state 109


State 48

  113 statement: print_statement • ';'

    ';'  shift, and go to state 110


State 49

  115 statement: if_else_statement •

    $default  reduce using rule 115 (statement)


State 50

  117 statement_list: statement •

    $default  reduce using rule 117 (statement_list)


State 51

    2 program_body: statement_list •
  118 statement_list: statement_list • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    LOOP      reduce using rule 94 ($@2)
    $default  reduce using rule 2 (program_body)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 111


State 52

   82 push_pop_statement: IDENTIFIER FORWARD_ACCESS • '[' expression ']'
   86                   | IDENTIFIER FORWARD_ACCESS • '[' ']'

    '['  shift, and go to state 112


State 53

   78 push_pop_statement: IDENTIFIER BACKWARD_ACCESS • '[' expression ']'

    '['  shift, and go to state 113


State 54

   18 function_call: IDENTIFIER '(' • ')'
   19              | IDENTIFIER '(' • argument_expression_list ')'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ')'         shift, and go to state 114
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    argument_expression_list   go to state 115
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 116


State 55

   22 map_array: '[' • expression ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 117


State 56

   23 map_array: map_array • '[' expression ']'
   25 lhs_expression: IDENTIFIER map_array •
   79 push_pop_statement: IDENTIFIER map_array • BACKWARD_ACCESS '[' expression ']'
   83                   | IDENTIFIER map_array • FORWARD_ACCESS '[' expression ']'
   87                   | IDENTIFIER map_array • FORWARD_ACCESS '[' ']'

    FORWARD_ACCESS   shift, and go to state 118
    BACKWARD_ACCESS  shift, and go to state 119
    '['              shift, and go to state 120

    $default  reduce using rule 25 (lhs_expression)


State 57

   18 function_call: IDENTIFIER • '(' ')'
   19              | IDENTIFIER • '(' argument_expression_list ')'
   24 lhs_expression: IDENTIFIER •
   25               | IDENTIFIER • map_array

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    $default  reduce using rule 24 (lhs_expression)

    map_array  go to state 121


State 58

   26 postfix_expression: lhs_expression •

    $default  reduce using rule 26 (postfix_expression)


State 59

   30 unary_expression: NOT unary_expression •

    $default  reduce using rule 30 (unary_expression)


State 60

   74 type_specifier: INT CONST •

    $default  reduce using rule 74 (type_specifier)


State 61

   75 type_specifier: FLOAT CONST •

    $default  reduce using rule 75 (type_specifier)


State 62

   12 set_statement: SET INT • SMALL ';'
   13              | SET INT • BIG ';'

    BIG    shift, and go to state 122
    SMALL  shift, and go to state 123


State 63

   14 set_statement: SET FLOAT • SMALL ';'
   15              | SET FLOAT • BIG ';'

    BIG    shift, and go to state 124
    SMALL  shift, and go to state 125


State 64

   34 unary_expression: SIZE '[' • postfix_expression ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    '('         shift, and go to state 13

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 126


State 65

  102 return_statement: RETURN VOID •

    $default  reduce using rule 102 (return_statement)


State 66

  103 return_statement: RETURN expression •

    $default  reduce using rule 103 (return_statement)


State 67

  104 print_statement: PRINT '(' • expression ')'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 127


State 68

   16 primary_expression: '(' expression • ')'

    ')'  shift, and go to state 128


State 69

   66 declaration_specifier: '[' • declaration_specifier ']'

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    '['    shift, and go to state 69
    '{'    shift, and go to state 19

    declaration_specifier  go to state 73
    type_specifier         go to state 42


State 70

   88 push_pop_statement: '[' ']' • BACKWARD_ACCESS IDENTIFIER
   89                   | '[' ']' • BACKWARD_ACCESS IDENTIFIER map_array

    BACKWARD_ACCESS  shift, and go to state 129


State 71

   26 postfix_expression: lhs_expression •
   84 push_pop_statement: '[' lhs_expression • ']' BACKWARD_ACCESS IDENTIFIER
   85                   | '[' lhs_expression • ']' BACKWARD_ACCESS IDENTIFIER map_array

    ']'  shift, and go to state 130

    ']'       [reduce using rule 26 (postfix_expression)]
    $default  reduce using rule 26 (postfix_expression)


State 72

   80 push_pop_statement: '[' expression • ']' FORWARD_ACCESS IDENTIFIER
   81                   | '[' expression • ']' FORWARD_ACCESS IDENTIFIER map_array

    ']'  shift, and go to state 131


State 73

   66 declaration_specifier: '[' declaration_specifier • ']'

    ']'  shift, and go to state 132


State 74

   31 unary_expression: '~' unary_expression •

    $default  reduce using rule 31 (unary_expression)


State 75

   32 unary_expression: '-' unary_expression •

    $default  reduce using rule 32 (unary_expression)


State 76

   33 unary_expression: '+' unary_expression •

    $default  reduce using rule 33 (unary_expression)


State 77

   90 compound_statement: '<' '>' •

    $default  reduce using rule 90 (compound_statement)


State 78

   62 assignment_statement: expression •
  105 chaining_if_else: expression • '?' statement_list
  106                 | expression • '?' statement_list ELSE ':' statement_list
  107                 | expression • '?' statement_list chaining_if_else

    '?'  shift, and go to state 133

    $default  reduce using rule 62 (assignment_statement)


State 79

  108 if_else_statement: '<' chaining_if_else • '>'

    '>'  shift, and go to state 134


State 80

   91 compound_statement: '<' statement_list • '>'
  118 statement_list: statement_list • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '>'         shift, and go to state 135
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 111


State 81

   67 declaration_specifier: '{' declaration_specifier • ':' declaration_specifier '}'

    ':'  shift, and go to state 136


State 82

    8 function_declaration: $@1 FUNC • IDENTIFIER '(' parameter_list ';' declaration_specifier ')' compound_statement

    IDENTIFIER  shift, and go to state 137


State 83

   23 map_array: map_array • '[' expression ']'
   27 postfix_expression: function_call map_array •

    '['  shift, and go to state 120

    $default  reduce using rule 27 (postfix_expression)


State 84

   63 assignment_statement: lhs_expression '=' • expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 138


State 85

   37 multiplicative_expression: multiplicative_expression '*' • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 139


State 86

   38 multiplicative_expression: multiplicative_expression '/' • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 140


State 87

   39 multiplicative_expression: multiplicative_expression '%' • unary_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression  go to state 24
    function_call       go to state 25
    lhs_expression      go to state 58
    postfix_expression  go to state 27
    unary_expression    go to state 141


State 88

   41 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 142


State 89

   42 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 143


State 90

   46 relational_expression: relational_expression LE_OP • additive_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 144


State 91

   47 relational_expression: relational_expression GE_OP • additive_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 145


State 92

   44 relational_expression: relational_expression '<' • additive_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 146


State 93

   45 relational_expression: relational_expression '>' • additive_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 147


State 94

   50 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 148


State 95

   49 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 149


State 96

   52 and_expression: and_expression '&' • equality_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 150


State 97

   54 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 151


State 98

   56 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 152


State 99

   58 logical_and_expression: logical_and_expression AND • inclusive_or_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 153


State 100

   60 logical_or_expression: logical_or_expression OR • logical_and_expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 154


State 101

  109 statement: assignment_statement ';' •

    $default  reduce using rule 109 (statement)


State 102

   76 declarator: IDENTIFIER •

    $default  reduce using rule 76 (declarator)


State 103

   64 declaration_statement: declaration_specifier init_declarator_list • ';'
   69 init_declarator_list: init_declarator_list • ',' init_declarator

    ';'  shift, and go to state 155
    ','  shift, and go to state 156


State 104

   68 init_declarator_list: init_declarator •

    $default  reduce using rule 68 (init_declarator_list)


State 105

   70 init_declarator: declarator •
   71                | declarator • '=' initializer

    '='  shift, and go to state 157

    $default  reduce using rule 70 (init_declarator)


State 106

  114 statement: push_pop_statement ';' •

    $default  reduce using rule 114 (statement)


State 107

   96 iteration_statement: LOOP • '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement
   97                    | LOOP • '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement
   98                    | LOOP • '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement
   99                    | LOOP • '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement
  100                    | LOOP • '(' ';' expression_statement assignment_statement ')' ':' compound_statement
  101                    | LOOP • '(' ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

    '('  shift, and go to state 158


State 108

   95 loop_statement: $@2 iteration_statement •

    $default  reduce using rule 95 (loop_statement)


State 109

  112 statement: return_statement ';' •

    $default  reduce using rule 112 (statement)


State 110

  113 statement: print_statement ';' •

    $default  reduce using rule 113 (statement)


State 111

  118 statement_list: statement_list statement •

    $default  reduce using rule 118 (statement_list)


State 112

   82 push_pop_statement: IDENTIFIER FORWARD_ACCESS '[' • expression ']'
   86                   | IDENTIFIER FORWARD_ACCESS '[' • ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ']'         shift, and go to state 159
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 160


State 113

   78 push_pop_statement: IDENTIFIER BACKWARD_ACCESS '[' • expression ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 161


State 114

   18 function_call: IDENTIFIER '(' ')' •

    $default  reduce using rule 18 (function_call)


State 115

   19 function_call: IDENTIFIER '(' argument_expression_list • ')'
   21 argument_expression_list: argument_expression_list • ',' expression

    ')'  shift, and go to state 162
    ','  shift, and go to state 163


State 116

   20 argument_expression_list: expression •

    $default  reduce using rule 20 (argument_expression_list)


State 117

   22 map_array: '[' expression • ']'

    ']'  shift, and go to state 164


State 118

   83 push_pop_statement: IDENTIFIER map_array FORWARD_ACCESS • '[' expression ']'
   87                   | IDENTIFIER map_array FORWARD_ACCESS • '[' ']'

    '['  shift, and go to state 165


State 119

   79 push_pop_statement: IDENTIFIER map_array BACKWARD_ACCESS • '[' expression ']'

    '['  shift, and go to state 166


State 120

   23 map_array: map_array '[' • expression ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 167


State 121

   23 map_array: map_array • '[' expression ']'
   25 lhs_expression: IDENTIFIER map_array •

    '['  shift, and go to state 120

    $default  reduce using rule 25 (lhs_expression)


State 122

   13 set_statement: SET INT BIG • ';'

    ';'  shift, and go to state 168


State 123

   12 set_statement: SET INT SMALL • ';'

    ';'  shift, and go to state 169


State 124

   15 set_statement: SET FLOAT BIG • ';'

    ';'  shift, and go to state 170


State 125

   14 set_statement: SET FLOAT SMALL • ';'

    ';'  shift, and go to state 171


State 126

   34 unary_expression: SIZE '[' postfix_expression • ']'

    ']'  shift, and go to state 172


State 127

  104 print_statement: PRINT '(' expression • ')'

    ')'  shift, and go to state 173


State 128

   16 primary_expression: '(' expression ')' •

    $default  reduce using rule 16 (primary_expression)


State 129

   88 push_pop_statement: '[' ']' BACKWARD_ACCESS • IDENTIFIER
   89                   | '[' ']' BACKWARD_ACCESS • IDENTIFIER map_array

    IDENTIFIER  shift, and go to state 174


State 130

   84 push_pop_statement: '[' lhs_expression ']' • BACKWARD_ACCESS IDENTIFIER
   85                   | '[' lhs_expression ']' • BACKWARD_ACCESS IDENTIFIER map_array

    BACKWARD_ACCESS  shift, and go to state 175


State 131

   80 push_pop_statement: '[' expression ']' • FORWARD_ACCESS IDENTIFIER
   81                   | '[' expression ']' • FORWARD_ACCESS IDENTIFIER map_array

    FORWARD_ACCESS  shift, and go to state 176


State 132

   66 declaration_specifier: '[' declaration_specifier ']' •

    $default  reduce using rule 66 (declaration_specifier)


State 133

  105 chaining_if_else: expression '?' • statement_list
  106                 | expression '?' • statement_list ELSE ':' statement_list
  107                 | expression '?' • statement_list chaining_if_else

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 50
    statement_list             go to state 177


State 134

  108 if_else_statement: '<' chaining_if_else '>' •

    $default  reduce using rule 108 (if_else_statement)


State 135

   91 compound_statement: '<' statement_list '>' •

    $default  reduce using rule 91 (compound_statement)


State 136

   67 declaration_specifier: '{' declaration_specifier ':' • declaration_specifier '}'

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    '['    shift, and go to state 69
    '{'    shift, and go to state 19

    declaration_specifier  go to state 178
    type_specifier         go to state 42


State 137

    8 function_declaration: $@1 FUNC IDENTIFIER • '(' parameter_list ';' declaration_specifier ')' compound_statement

    '('  shift, and go to state 179


State 138

   63 assignment_statement: lhs_expression '=' expression •

    $default  reduce using rule 63 (assignment_statement)


State 139

   37 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 140

   38 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 38 (multiplicative_expression)


State 141

   39 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $default  reduce using rule 39 (multiplicative_expression)


State 142

   37 multiplicative_expression: multiplicative_expression • '*' unary_expression
   38                          | multiplicative_expression • '/' unary_expression
   39                          | multiplicative_expression • '%' unary_expression
   41 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 41 (additive_expression)


State 143

   37 multiplicative_expression: multiplicative_expression • '*' unary_expression
   38                          | multiplicative_expression • '/' unary_expression
   39                          | multiplicative_expression • '%' unary_expression
   42 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87

    $default  reduce using rule 42 (additive_expression)


State 144

   41 additive_expression: additive_expression • '-' multiplicative_expression
   42                    | additive_expression • '+' multiplicative_expression
   46 relational_expression: relational_expression LE_OP additive_expression •

    '-'  shift, and go to state 88
    '+'  shift, and go to state 89

    $default  reduce using rule 46 (relational_expression)


State 145

   41 additive_expression: additive_expression • '-' multiplicative_expression
   42                    | additive_expression • '+' multiplicative_expression
   47 relational_expression: relational_expression GE_OP additive_expression •

    '-'  shift, and go to state 88
    '+'  shift, and go to state 89

    $default  reduce using rule 47 (relational_expression)


State 146

   41 additive_expression: additive_expression • '-' multiplicative_expression
   42                    | additive_expression • '+' multiplicative_expression
   44 relational_expression: relational_expression '<' additive_expression •

    '-'  shift, and go to state 88
    '+'  shift, and go to state 89

    $default  reduce using rule 44 (relational_expression)


State 147

   41 additive_expression: additive_expression • '-' multiplicative_expression
   42                    | additive_expression • '+' multiplicative_expression
   45 relational_expression: relational_expression '>' additive_expression •

    '-'  shift, and go to state 88
    '+'  shift, and go to state 89

    $default  reduce using rule 45 (relational_expression)


State 148

   44 relational_expression: relational_expression • '<' additive_expression
   45                      | relational_expression • '>' additive_expression
   46                      | relational_expression • LE_OP additive_expression
   47                      | relational_expression • GE_OP additive_expression
   50 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 90
    GE_OP  shift, and go to state 91
    '<'    shift, and go to state 92
    '>'    shift, and go to state 93

    $default  reduce using rule 50 (equality_expression)


State 149

   44 relational_expression: relational_expression • '<' additive_expression
   45                      | relational_expression • '>' additive_expression
   46                      | relational_expression • LE_OP additive_expression
   47                      | relational_expression • GE_OP additive_expression
   49 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 90
    GE_OP  shift, and go to state 91
    '<'    shift, and go to state 92
    '>'    shift, and go to state 93

    $default  reduce using rule 49 (equality_expression)


State 150

   49 equality_expression: equality_expression • EQ_OP relational_expression
   50                    | equality_expression • NE_OP relational_expression
   52 and_expression: and_expression '&' equality_expression •

    NE_OP  shift, and go to state 94
    EQ_OP  shift, and go to state 95

    $default  reduce using rule 52 (and_expression)


State 151

   52 and_expression: and_expression • '&' equality_expression
   54 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 96

    $default  reduce using rule 54 (exclusive_or_expression)


State 152

   54 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   56 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 97

    $default  reduce using rule 56 (inclusive_or_expression)


State 153

   56 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   58 logical_and_expression: logical_and_expression AND inclusive_or_expression •

    '|'  shift, and go to state 98

    $default  reduce using rule 58 (logical_and_expression)


State 154

   58 logical_and_expression: logical_and_expression • AND inclusive_or_expression
   60 logical_or_expression: logical_or_expression OR logical_and_expression •

    AND  shift, and go to state 99

    $default  reduce using rule 60 (logical_or_expression)


State 155

   64 declaration_statement: declaration_specifier init_declarator_list ';' •

    $default  reduce using rule 64 (declaration_statement)


State 156

   69 init_declarator_list: init_declarator_list ',' • init_declarator

    IDENTIFIER  shift, and go to state 102

    init_declarator  go to state 180
    declarator       go to state 105


State 157

   71 init_declarator: declarator '=' • initializer

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 181
    initializer                go to state 182


State 158

   96 iteration_statement: LOOP '(' • assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement
   97                    | LOOP '(' • assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement
   98                    | LOOP '(' • declaration_statement expression_statement assignment_statement ')' ':' compound_statement
   99                    | LOOP '(' • declaration_statement expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement
  100                    | LOOP '(' • ';' expression_statement assignment_statement ')' ':' compound_statement
  101                    | LOOP '(' • ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ';'         shift, and go to state 183
    '['         shift, and go to state 69
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '{'         shift, and go to state 19

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 184
    declaration_statement      go to state 185
    declaration_specifier      go to state 41
    type_specifier             go to state 42


State 159

   86 push_pop_statement: IDENTIFIER FORWARD_ACCESS '[' ']' •

    $default  reduce using rule 86 (push_pop_statement)


State 160

   82 push_pop_statement: IDENTIFIER FORWARD_ACCESS '[' expression • ']'

    ']'  shift, and go to state 186


State 161

   78 push_pop_statement: IDENTIFIER BACKWARD_ACCESS '[' expression • ']'

    ']'  shift, and go to state 187


State 162

   19 function_call: IDENTIFIER '(' argument_expression_list ')' •

    $default  reduce using rule 19 (function_call)


State 163

   21 argument_expression_list: argument_expression_list ',' • expression

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 188


State 164

   22 map_array: '[' expression ']' •

    $default  reduce using rule 22 (map_array)


State 165

   83 push_pop_statement: IDENTIFIER map_array FORWARD_ACCESS '[' • expression ']'
   87                   | IDENTIFIER map_array FORWARD_ACCESS '[' • ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ']'         shift, and go to state 189
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 190


State 166

   79 push_pop_statement: IDENTIFIER map_array BACKWARD_ACCESS '[' • expression ']'

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 191


State 167

   23 map_array: map_array '[' expression • ']'

    ']'  shift, and go to state 192


State 168

   13 set_statement: SET INT BIG ';' •

    $default  reduce using rule 13 (set_statement)


State 169

   12 set_statement: SET INT SMALL ';' •

    $default  reduce using rule 12 (set_statement)


State 170

   15 set_statement: SET FLOAT BIG ';' •

    $default  reduce using rule 15 (set_statement)


State 171

   14 set_statement: SET FLOAT SMALL ';' •

    $default  reduce using rule 14 (set_statement)


State 172

   34 unary_expression: SIZE '[' postfix_expression ']' •

    $default  reduce using rule 34 (unary_expression)


State 173

  104 print_statement: PRINT '(' expression ')' •

    $default  reduce using rule 104 (print_statement)


State 174

   88 push_pop_statement: '[' ']' BACKWARD_ACCESS IDENTIFIER •
   89                   | '[' ']' BACKWARD_ACCESS IDENTIFIER • map_array

    '['  shift, and go to state 55

    $default  reduce using rule 88 (push_pop_statement)

    map_array  go to state 193


State 175

   84 push_pop_statement: '[' lhs_expression ']' BACKWARD_ACCESS • IDENTIFIER
   85                   | '[' lhs_expression ']' BACKWARD_ACCESS • IDENTIFIER map_array

    IDENTIFIER  shift, and go to state 194


State 176

   80 push_pop_statement: '[' expression ']' FORWARD_ACCESS • IDENTIFIER
   81                   | '[' expression ']' FORWARD_ACCESS • IDENTIFIER map_array

    IDENTIFIER  shift, and go to state 195


State 177

  105 chaining_if_else: expression '?' statement_list •
  106                 | expression '?' statement_list • ELSE ':' statement_list
  107                 | expression '?' statement_list • chaining_if_else
  118 statement_list: statement_list • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    ELSE        shift, and go to state 196
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    '>'       reduce using rule 105 (chaining_if_else)
    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 78
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    chaining_if_else           go to state 197
    if_else_statement          go to state 49
    statement                  go to state 111


State 178

   67 declaration_specifier: '{' declaration_specifier ':' declaration_specifier • '}'

    '}'  shift, and go to state 198


State 179

    8 function_declaration: $@1 FUNC IDENTIFIER '(' • parameter_list ';' declaration_specifier ')' compound_statement

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    '['    shift, and go to state 69
    '{'    shift, and go to state 19

    parameter_list         go to state 199
    parameter              go to state 200
    declaration_specifier  go to state 201
    type_specifier         go to state 42


State 180

   69 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 69 (init_declarator_list)


State 181

   77 initializer: assignment_statement •

    $default  reduce using rule 77 (initializer)


State 182

   71 init_declarator: declarator '=' initializer •

    $default  reduce using rule 71 (init_declarator)


State 183

  100 iteration_statement: LOOP '(' ';' • expression_statement assignment_statement ')' ':' compound_statement
  101                    | LOOP '(' ';' • expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ';'         shift, and go to state 202
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 203
    expression_statement       go to state 204


State 184

   96 iteration_statement: LOOP '(' assignment_statement • ';' expression_statement assignment_statement ')' ':' compound_statement
   97                    | LOOP '(' assignment_statement • ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

    ';'  shift, and go to state 205


State 185

   98 iteration_statement: LOOP '(' declaration_statement • expression_statement assignment_statement ')' ':' compound_statement
   99                    | LOOP '(' declaration_statement • expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ';'         shift, and go to state 202
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 203
    expression_statement       go to state 206


State 186

   82 push_pop_statement: IDENTIFIER FORWARD_ACCESS '[' expression ']' •

    $default  reduce using rule 82 (push_pop_statement)


State 187

   78 push_pop_statement: IDENTIFIER BACKWARD_ACCESS '[' expression ']' •

    $default  reduce using rule 78 (push_pop_statement)


State 188

   21 argument_expression_list: argument_expression_list ',' expression •

    $default  reduce using rule 21 (argument_expression_list)


State 189

   87 push_pop_statement: IDENTIFIER map_array FORWARD_ACCESS '[' ']' •

    $default  reduce using rule 87 (push_pop_statement)


State 190

   83 push_pop_statement: IDENTIFIER map_array FORWARD_ACCESS '[' expression • ']'

    ']'  shift, and go to state 207


State 191

   79 push_pop_statement: IDENTIFIER map_array BACKWARD_ACCESS '[' expression • ']'

    ']'  shift, and go to state 208


State 192

   23 map_array: map_array '[' expression ']' •

    $default  reduce using rule 23 (map_array)


State 193

   23 map_array: map_array • '[' expression ']'
   89 push_pop_statement: '[' ']' BACKWARD_ACCESS IDENTIFIER map_array •

    '['  shift, and go to state 120

    $default  reduce using rule 89 (push_pop_statement)


State 194

   84 push_pop_statement: '[' lhs_expression ']' BACKWARD_ACCESS IDENTIFIER •
   85                   | '[' lhs_expression ']' BACKWARD_ACCESS IDENTIFIER • map_array

    '['  shift, and go to state 55

    $default  reduce using rule 84 (push_pop_statement)

    map_array  go to state 209


State 195

   80 push_pop_statement: '[' expression ']' FORWARD_ACCESS IDENTIFIER •
   81                   | '[' expression ']' FORWARD_ACCESS IDENTIFIER • map_array

    '['  shift, and go to state 55

    $default  reduce using rule 80 (push_pop_statement)

    map_array  go to state 210


State 196

  106 chaining_if_else: expression '?' statement_list ELSE • ':' statement_list

    ':'  shift, and go to state 211


State 197

  107 chaining_if_else: expression '?' statement_list chaining_if_else •

    $default  reduce using rule 107 (chaining_if_else)


State 198

   67 declaration_specifier: '{' declaration_specifier ':' declaration_specifier '}' •

    $default  reduce using rule 67 (declaration_specifier)


State 199

    8 function_declaration: $@1 FUNC IDENTIFIER '(' parameter_list • ';' declaration_specifier ')' compound_statement
   10 parameter_list: parameter_list • ',' parameter

    ';'  shift, and go to state 212
    ','  shift, and go to state 213


State 200

    9 parameter_list: parameter •

    $default  reduce using rule 9 (parameter_list)


State 201

   11 parameter: declaration_specifier • IDENTIFIER

    IDENTIFIER  shift, and go to state 214


State 202

   92 expression_statement: ';' •

    $default  reduce using rule 92 (expression_statement)


State 203

   93 expression_statement: expression • ';'

    ';'  shift, and go to state 215


State 204

  100 iteration_statement: LOOP '(' ';' expression_statement • assignment_statement ')' ':' compound_statement
  101                    | LOOP '(' ';' expression_statement • assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 216


State 205

   96 iteration_statement: LOOP '(' assignment_statement ';' • expression_statement assignment_statement ')' ':' compound_statement
   97                    | LOOP '(' assignment_statement ';' • expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    ';'         shift, and go to state 202
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 58
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 203
    expression_statement       go to state 217


State 206

   98 iteration_statement: LOOP '(' declaration_statement expression_statement • assignment_statement ')' ':' compound_statement
   99                    | LOOP '(' declaration_statement expression_statement • assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 218


State 207

   83 push_pop_statement: IDENTIFIER map_array FORWARD_ACCESS '[' expression ']' •

    $default  reduce using rule 83 (push_pop_statement)


State 208

   79 push_pop_statement: IDENTIFIER map_array BACKWARD_ACCESS '[' expression ']' •

    $default  reduce using rule 79 (push_pop_statement)


State 209

   23 map_array: map_array • '[' expression ']'
   85 push_pop_statement: '[' lhs_expression ']' BACKWARD_ACCESS IDENTIFIER map_array •

    '['  shift, and go to state 120

    $default  reduce using rule 85 (push_pop_statement)


State 210

   23 map_array: map_array • '[' expression ']'
   81 push_pop_statement: '[' expression ']' FORWARD_ACCESS IDENTIFIER map_array •

    '['  shift, and go to state 120

    $default  reduce using rule 81 (push_pop_statement)


State 211

  106 chaining_if_else: expression '?' statement_list ELSE ':' • statement_list

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 50
    statement_list             go to state 219


State 212

    8 function_declaration: $@1 FUNC IDENTIFIER '(' parameter_list ';' • declaration_specifier ')' compound_statement

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    '['    shift, and go to state 69
    '{'    shift, and go to state 19

    declaration_specifier  go to state 220
    type_specifier         go to state 42


State 213

   10 parameter_list: parameter_list ',' • parameter

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    '['    shift, and go to state 69
    '{'    shift, and go to state 19

    parameter              go to state 221
    declaration_specifier  go to state 201
    type_specifier         go to state 42


State 214

   11 parameter: declaration_specifier IDENTIFIER •

    $default  reduce using rule 11 (parameter)


State 215

   93 expression_statement: expression ';' •

    $default  reduce using rule 93 (expression_statement)


State 216

  100 iteration_statement: LOOP '(' ';' expression_statement assignment_statement • ')' ':' compound_statement
  101                    | LOOP '(' ';' expression_statement assignment_statement • ')' ':' compound_statement FINALLY ':' statement

    ')'  shift, and go to state 222


State 217

   96 iteration_statement: LOOP '(' assignment_statement ';' expression_statement • assignment_statement ')' ':' compound_statement
   97                    | LOOP '(' assignment_statement ';' expression_statement • assignment_statement ')' ':' compound_statement FINALLY ':' statement

    IDENTIFIER  shift, and go to state 57
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    SIZE        shift, and go to state 10
    '('         shift, and go to state 13
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 223


State 218

   98 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement • ')' ':' compound_statement
   99                    | LOOP '(' declaration_statement expression_statement assignment_statement • ')' ':' compound_statement FINALLY ':' statement

    ')'  shift, and go to state 224


State 219

  106 chaining_if_else: expression '?' statement_list ELSE ':' statement_list •
  118 statement_list: statement_list • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    '>'       reduce using rule 106 (chaining_if_else)
    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 111


State 220

    8 function_declaration: $@1 FUNC IDENTIFIER '(' parameter_list ';' declaration_specifier • ')' compound_statement

    ')'  shift, and go to state 225


State 221

   10 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 10 (parameter_list)


State 222

  100 iteration_statement: LOOP '(' ';' expression_statement assignment_statement ')' • ':' compound_statement
  101                    | LOOP '(' ';' expression_statement assignment_statement ')' • ':' compound_statement FINALLY ':' statement

    ':'  shift, and go to state 226


State 223

   96 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement • ')' ':' compound_statement
   97                    | LOOP '(' assignment_statement ';' expression_statement assignment_statement • ')' ':' compound_statement FINALLY ':' statement

    ')'  shift, and go to state 227


State 224

   98 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement ')' • ':' compound_statement
   99                    | LOOP '(' declaration_statement expression_statement assignment_statement ')' • ':' compound_statement FINALLY ':' statement

    ':'  shift, and go to state 228


State 225

    8 function_declaration: $@1 FUNC IDENTIFIER '(' parameter_list ';' declaration_specifier ')' • compound_statement

    '<'  shift, and go to state 229

    compound_statement  go to state 230


State 226

  100 iteration_statement: LOOP '(' ';' expression_statement assignment_statement ')' ':' • compound_statement
  101                    | LOOP '(' ';' expression_statement assignment_statement ')' ':' • compound_statement FINALLY ':' statement

    '<'  shift, and go to state 229

    compound_statement  go to state 231


State 227

   96 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' • ':' compound_statement
   97                    | LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' • ':' compound_statement FINALLY ':' statement

    ':'  shift, and go to state 232


State 228

   98 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' • compound_statement
   99                    | LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' • compound_statement FINALLY ':' statement

    '<'  shift, and go to state 229

    compound_statement  go to state 233


State 229

   90 compound_statement: '<' • '>'
   91                   | '<' • statement_list '>'

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '>'         shift, and go to state 77
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 50
    statement_list             go to state 80


State 230

    8 function_declaration: $@1 FUNC IDENTIFIER '(' parameter_list ';' declaration_specifier ')' compound_statement •

    $default  reduce using rule 8 (function_declaration)


State 231

  100 iteration_statement: LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement •
  101                    | LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement • FINALLY ':' statement

    FINALLY  shift, and go to state 234

    $default  reduce using rule 100 (iteration_statement)


State 232

   96 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' • compound_statement
   97                    | LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' • compound_statement FINALLY ':' statement

    '<'  shift, and go to state 229

    compound_statement  go to state 235


State 233

   98 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement •
   99                    | LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement • FINALLY ':' statement

    FINALLY  shift, and go to state 236

    $default  reduce using rule 98 (iteration_statement)


State 234

  101 iteration_statement: LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY • ':' statement

    ':'  shift, and go to state 237


State 235

   96 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement •
   97                    | LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement • FINALLY ':' statement

    FINALLY  shift, and go to state 238

    $default  reduce using rule 96 (iteration_statement)


State 236

   99 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement FINALLY • ':' statement

    ':'  shift, and go to state 239


State 237

  101 iteration_statement: LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 240


State 238

   97 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY • ':' statement

    ':'  shift, and go to state 241


State 239

   99 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 242


State 240

  101 iteration_statement: LOOP '(' ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement •

    $default  reduce using rule 101 (iteration_statement)


State 241

   97 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' • statement

    IDENTIFIER  shift, and go to state 4
    CONSTANT    shift, and go to state 5
    NOT         shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    SIZE        shift, and go to state 10
    RETURN      shift, and go to state 11
    PRINT       shift, and go to state 12
    '('         shift, and go to state 13
    '['         shift, and go to state 14
    '~'         shift, and go to state 15
    '-'         shift, and go to state 16
    '+'         shift, and go to state 17
    '<'         shift, and go to state 18
    '{'         shift, and go to state 19

    $default  reduce using rule 94 ($@2)

    primary_expression         go to state 24
    function_call              go to state 25
    lhs_expression             go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    expression                 go to state 38
    assignment_statement       go to state 39
    declaration_statement      go to state 40
    declaration_specifier      go to state 41
    type_specifier             go to state 42
    push_pop_statement         go to state 43
    compound_statement         go to state 44
    loop_statement             go to state 45
    $@2                        go to state 46
    return_statement           go to state 47
    print_statement            go to state 48
    if_else_statement          go to state 49
    statement                  go to state 243


State 242

   99 iteration_statement: LOOP '(' declaration_statement expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement •

    $default  reduce using rule 99 (iteration_statement)


State 243

   97 iteration_statement: LOOP '(' assignment_statement ';' expression_statement assignment_statement ')' ':' compound_statement FINALLY ':' statement •

    $default  reduce using rule 97 (iteration_statement)
